#!/usr/bin/env python

import rospy

from nav_msgs.msg import Path
from std_msgs.msg import Float64
from geometry_msgs.msg import PoseStamped

from skidpad import Skidpad
from math import sin, cos

class SkidpadPlanner():
    
    def __init__(self, R, a, b, x, y, yaw):
        self.skidpad_ = Skidpad(R, a, b)
        self.reset_skidpad(x, y, yaw)
    
    def reset_skidpad(x, y, yaw):
        self.x_ = x - self.skidpad_.a * sin(yaw)
        self.y_ = y + self.skidpad_.a * cos(yaw)
        self.yaw_ = yaw
        
        self.s_ = 0

    def update(x, y):
        self.s_ = self.skidpad_.find_s(self.s_, x, y)

    def generate_points(offsets):
        
        points = []
        for delta_s in offsets:
            s = self.s_ + delta_s 
           
            # Path points in skidpad frame
            x = self.skidpad_.x(s)
            y = self.skidpad_.y(s)

            # Path points in map frame
            points.append([
                self.x_ + x * cos(self.yaw_) - y * sin(self.yaw_),
                self.y_ + x * sin(self.yaw_) + y * cos(self.yaw_)
            ])

        return points

def publish_path(points):
    pass # TODO

if __name__ == '__main__':
    rospy.init_node('skidpad_planner')

    R = 5
    a = 5
    b = 5

    map_frame = 'map'
    skidpad_frame = 'skidpad'
    vehicle_frame = 'base_link'

    lookup_start = -2
    lookup_stop = 5
    lookup_step = 0.1

    # TODO Wait for transform

    skidpad_planner = SkidpadPlanner(R, a, b, x, y, yaw)

    while not rospy.is_shutdown():
        try:
            trans = tf_buffer.lookup_transform(skidpad_frame,
                                               vehicle_frame,
                                               rospy.Time(0))
           
            x = trans.transform.translation.x
            y = trans.transform.translation.y

            skidpad_planner.update()
            
            points = skidpad_planner.generate_points()
            publish_path(points)

        except (tf2_ros.LookupException,
                tf2_ros.ConnectivityException,
                tf2_ros.ExtraploationException):
        
        rate.sleep()
